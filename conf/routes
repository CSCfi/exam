
GET           /                                                     controllers.Index.index()

POST          /login                                                controllers.SessionController.login()
#POST          /shiblogin                                            controllers.SessionController.shiblogin()
POST          /logout                                               controllers.SessionController.logout()
GET           /ping                                                 controllers.SessionController.ping()


############### User interface ###############
GET           /users                                                controllers.UserController.getUsers()
GET           /users/:id                                            controllers.UserController.getUser(id: Long)
GET           /users/byrole/:role                                   controllers.UserController.getUsersByRole(role: String)
GET           /users/filter/:role                                   controllers.UserController.getUsersByRoleFilter(role: String, q: String)
GET           /users/filter/:role/:eid                              controllers.UserController.getExamInspectorsByRoleFilter(role: String, eid: Long, q: String)
PUT           /users/:id                                            controllers.UserController.updateUser(id: Long)
POST          /users                                                controllers.UserController.addUser()
DELETE        /users/:id                                            controllers.UserController.deleteUser(id: Long)



############### Exam interface ###############

GET           /exams                                                controllers.ExamController.getExams()
GET           /exams/:id                                            controllers.ExamController.getExam(id: Long)
GET           /exampreview/:id                                      controllers.ExamController.getExamPreview(id: Long)
DELETE        /exams/:id                                            controllers.ExamController.deleteExam(id: Long)
PUT           /review/:id                                           controllers.ExamController.reviewExam(id: Long)
POST          /review/:eid/comment/:cid                             controllers.ExamController.insertComment(eid: Long, cid: Long)
PUT           /review/:eid/comment/:cid                             controllers.ExamController.updateComment(eid: Long, cid: Long)
GET           /reviews/:eid                                         controllers.ExamController.getExamReviews(eid: Long)
GET           /review/info/:eid                                     controllers.ExamController.getExamStudentInfo(eid: Long)
GET           /exams/state/:state                                   controllers.ExamController.getExamsByState(state: String)
PUT           /exams/:id                                            controllers.ExamController.updateExam(id: Long)
POST          /exams                                                controllers.ExamController.createExam()
POST          /exams/:id/section                                    controllers.ExamController.insertSection(id: Long)
DELETE        /exams/:eid/section/:sid                              controllers.ExamController.removeSection(eid: Long, sid: Long)
PUT           /exams/:eid/section/:sid                              controllers.ExamController.updateSection(eid: Long, sid: Long)
PUT           /exams/:eid/course/:cid                               controllers.ExamController.updateCourse(eid: Long, cid: Long)
PUT           /exams/:eid/room/:rid                                 controllers.ExamController.updateRoom(eid: Long, rid: Long)
GET           /finishedexams                                        controllers.ExamController.getFinishedExams()
GET           /activeexams                                          controllers.ExamController.getActiveExams()
GET           /reviewerexams                                        controllers.ExamController.getReviewerExams()
GET           /examenrolments/:eid                                  controllers.ExamController.getEnrolmentsForExam(eid: Long)
GET           /examparticipations/:eid                              controllers.ExamController.getParticipationsForExam(eid: Long)
POST          /exams/:eid/examtype/:etid                            controllers.ExamController.insertExamType(eid: Long, etid: Long)


GET           /exam/:id/inspections                                 controllers.ExamController.getExamInspections(id: Long)
POST          /exams/:eid/inspector/:uid                            controllers.ExamController.insertInspection(eid: Long, uid: Long)
DELETE        /exams/inspector/:id                                  controllers.ExamController.deleteInspection(id: Long)

POST          /exam/:eid/section/:sid/question/:qid                	controllers.ExamController.insertExamQuestion(eid: Long, sid: Long, qid: Long)
POST          /exams/:eid/section/:sid/question/:qid                controllers.ExamController.insertQuestion(eid: Long, sid: Long, qid: Long)
DELETE        /exams/:eid/section/:sid/question/:qid                controllers.ExamController.removeQuestion(eid: Long, sid: Long, qid: Long)
GET           /draft                                                controllers.ExamController.createExamDraft()

GET           /enrolments                                           controllers.ExamController.getEnrolments()
GET           /inspections                                          controllers.ExamController.getInspections()

GET           /student/exams                                        controllers.StudentExamController.listActiveExams()
GET           /student/finishedexams/:uid                           controllers.StudentExamController.getFinishedExams(uid: Long)
GET           /feedback/exams/:eid                                  controllers.StudentExamController.getExamGeneralInfo(eid: Long)
PUT           /student/exams/:id                                    controllers.StudentExamController.saveAnswersAndExit(id: Long)
PUT           /student/exam/abort/:id                               controllers.StudentExamController.abortExam(id: Long)
GET           /student/doexam/:hash                                 controllers.StudentExamController.startExam(hash: String)
GET           /enrolments/:uid                                      controllers.StudentExamController.getEnrolmentsForUser(uid: Long)

POST          /student/exams/:hash/question/:qid/option/:oid        controllers.StudentExamController.insertAnswer(hash: String, qid: Long, oid: Long)
POST          /student/exams/:hash/question/:questionId             controllers.StudentExamController.insertEssay(hash: String, questionId: Long)


############### Enrolment interface ###############

GET           /enroll/:code                                         controllers.EnrollController.enrollExamList(code: String)
GET           /enroll/:code/exam/:id                                controllers.EnrollController.enrollExamInfo(code: String, id: Long)
POST          /enroll/:code/exam/:id                                controllers.EnrollController.createEnrolment(code: String, id: Long)
DELETE        /enroll/:code/exam/:id                                controllers.EnrollController.deleteEnrolment(code: String, id: Long)

############### Section interface ###############

GET           /sections/:id                                         controllers.ExamController.getExamSections(id: Long)
DELETE        /section/:sectionId                                   controllers.ExamController.deleteSection(sectionId: Long)
DELETE        /clearsection/:sid                                    controllers.ExamController.clearQuestions(sid: Long)


############### Courses interface ###############
GET           /courses                                              controllers.CourseController.getCourses(filter: Option[FilterType], q: Option[String])
GET           /courses/:id                                          controllers.CourseController.getCourse(id: Long)

############### Question interface ###############

GET           /questions                                            controllers.QuestionController.getQuestions()
GET           /questions/:id                                        controllers.QuestionController.getQuestion(id: Long)
GET           /questionlist/user/:id                                controllers.QuestionController.getQuestionsForUser(id: Long)
PUT           /questions/:id                                        controllers.QuestionController.updateQuestion(id: Long)
PUT           /questions/option/:oid                                controllers.QuestionController.updateOption(oid: Long)
POST          /questions                                            controllers.QuestionController.addQuestion()
POST          /question/:id                                         controllers.QuestionController.copyQuestion(id: Long)
POST          /questions/:qid/option                                controllers.QuestionController.addOption(qid: Long)
DELETE        /questions/:id                                        controllers.QuestionController.deleteQuestion(id: Long)
DELETE        /questions/option/:oid                                controllers.QuestionController.deleteOption(oid: Long)


GET           /options                                              controllers.QuestionController.createOption()
GET           /options/:id                                          controllers.QuestionController.getOption(id: Long)

############### Reservation interface ###############

GET           /rooms                                                controllers.RoomController.getExamRooms()
GET           /rooms/:id                                            controllers.RoomController.getExamRoom(id: Long)
PUT           /rooms/:id                                            controllers.RoomController.updateExamRoom(id: Long)
DELETE        /rooms/:id                                            controllers.RoomController.removeExamRoom(id: Long)
PUT           /address/:id                                          controllers.RoomController.updateExamRoomAddress(id: Long)

PUT           /workinghours/:id                                     controllers.RoomController.updateExamRoomWorkingHours(id: Long)
PUT           /exception/:id                                        controllers.RoomController.addRoomExceptionHour(id: Long)
DELETE        /exception/:id                                        controllers.RoomController.removeRoomExceptionHour(id: Long)



GET           /draft/rooms                                          controllers.RoomController.createExamRoomDraft()

############### ExamMachines interface ###############

GET           /machines                                             controllers.ExamMachineController.getExamMachines()
GET           /machines/:id                                         controllers.ExamMachineController.getExamMachine(id: Long)
PUT           /machines/:id                                         controllers.ExamMachineController.updateExamMachine(id: Long)
POST          /machines/:id                                         controllers.ExamMachineController.insertExamMachine(id: Long)
DELETE        /machines/:id                                         controllers.ExamMachineController.removeExamMachine(id: Long)

PUT			  /machine/:mid/software/:sid							controllers.ExamMachineController.updateExamMachineSoftwareInfo(mid: Long, sid: Long)
PUT			  /software_machine/:mid								controllers.ExamMachineController.resetExamMachineSoftwareInfo(mid: Long)

GET           /softwares                                            controllers.ExamMachineController.getSoftwares()
GET           /softwares/:id                                        controllers.ExamMachineController.getSoftware(id: Long)
DELETE        /softwares/:id                                        controllers.ExamMachineController.removeSoftware(id: Long)
POST          /softwares/add/:name                                  controllers.ExamMachineController.addSoftware(name: String)
PUT           /softwares/update/:id/:name                           controllers.ExamMachineController.updateSoftware(id: Long, name: String)

############## Attachment ############################
POST          /attachment/question                                  controllers.AttachmentController.addAttachmentToQuestion()
DELETE        /attachment/question/:id                              controllers.AttachmentController.deleteQuestionAttachment(id: Long)
GET           /attachment/question/:id                              controllers.AttachmentController.downloadQuestionAttachment(id: Long)
POST          /attachment/exam                                      controllers.AttachmentController.addAttachmentToExam()
DELETE        /attachment/exam/:id                                  controllers.AttachmentController.deleteExamAttachment(id: Long)
GET           /attachment/exam/:id                                  controllers.AttachmentController.downloadExamAttachment(id: Long)


#### integration ####


GET           /integration/info/:organisationId/:id                 controllers.Interfaces.getInfo(organisationId: String, id: String)
GET           /integration/record/:vatIdNumber/:startDate           controllers.Interfaces.getRecords(vatIdNumber: String, startDate: String)



GET           /time                                                 controllers.TimeController.getTime()
GET           /time/:id                                             controllers.TimeController.getExamRemainingTime(id: Long)


############### SQLinterface ###############



################# Calendar interface ##################
GET           /calendar/:examinput/:roominput/:dateinput            controllers.CalendarController.getSlots(examinput: String, roominput:String, dateinput: String)
POST          /calendar/reservation                                 controllers.CalendarController.createReservation()
DELETE        /calendar/reservation/:id                             controllers.CalendarController.removeReservation(id: Long)


################# General Settings interface ##################

GET        /agreament                                               controllers.SettingsController.getUserAgreament()
GET        /agreament/:id                                           controllers.SettingsController.getUserAgreamentX(id: Long)
PUT        /agreament/:id                                           controllers.SettingsController.updateUserAgreament(id: Long)

################# Statistics interface ##################

GET     /statistics/resbydate/:roomId/:from/:to                     controllers.StatisticsController.getReservationsForRoomByDate(roomId: Long, from: String, to: String)
GET     /statistics/examnames                                       controllers.StatisticsController.getExamNames()
GET     /statistics/examnames/:id                                   controllers.StatisticsController.getExam(id: Long)

############### test test test test test###############
POST          /test                                                 controllers.TestController.addQuestion()
GET           /secure                                               controllers.TestController.shibbolethHeaders()
GET           /son                                                  controllers.TestController.son()
GET           /org                                                  controllers.TestController.org()
GET           /exam-score-static/:code                              controllers.ExamScoreController.examScoreStatic(code: String)
POST          /exam-score-test                                      controllers.ExamScoreController.examScoreTest()

GET           /assets/*file                                         controllers.Assets.at(path="/public", file)
