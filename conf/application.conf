# This is the main configuration file for the application.
# ~~~~~

########################################################################################################################
# Play framework related settings not specific to EXAM. Feel free to configure.
# ~~~~~

# Mail settings
play.mailer.host = smtp.uni.org
play.mailer.port = 465
play.mailer.ssl = yes
play.mailer.tls = yes
play.mailer.user = "user"
play.mailer.password = "password"
# To use mock, just uncomment, previous lines can be left as they are
#play.mailer.mock=true

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS
db.default.driver = org.postgresql.Driver
db.default.url = "jdbc:postgresql://localhost/sitnet"
db.default.username = sitnet
db.default.password = sitnet
# Log SQL statements yes/no
db.default.logStatements = false

# WS Request timeout in milliseconds
play.ws.timeout.connection = 10000

########################################################################################################################
# EXAM specific configurations. Feel free to configure.
# ~~~~~

# EXAM defines 3 user roles:
# -STUDENT
# -TEACHER
# -ADMIN
#
# When user logs in the first time via Shibboleth, accordingly a local user is created and saved in EXAM database.
# Different institutions use Shibboleth roles differently, that's why we need to map Shibboleth roles to EXAM roles
# In the following configuration you can specify which Shibboleth roles correspond to EXAM roles. In case multiple
# Shibboleth roles are to be mapped to a single EXAM role, the names must be comma separated.
sitnet.roles = {
  student = [
    "student"
  ]
  teacher = [
    "faculty"
    "affiliate"
    "alum"
  ]
  admin = [
    "staff"
  ]
}

# Login type. At the moment only HAKA is supported in production environments.
sitnet.login = "HAKA"

# Hostname
sitnet.application.hostname = "http://uni.org"

# Attachment directory. If a relative path is provided, it shall be in relation to application root path.
# (<app_dir>/target/universal/stage in case of production environment)
sitnet.attachments.path = "/var/lib/exam/attachments"

# Link to base education system URL hosted by the educational organization. Used in some of the emails targeted for
# students.
sitnet.baseSystemURL = "http://base.uni.org"

# External course interface in use: true=on, false=off
sitnet.integration.courseUnitInfo.active = true
# URL configuration for the course interface(s). Each URL should have the course code either as path parameter or query
# parameter. Use ${course_code} for marking that part of the path.
# You can specify URLs on a per-organisation basis in order to use different URLs for users that are from different
# organisations. In that case the key should match with the code column of organisation relation in the database.
# "default" is used if no other match is found. You can remove the "default" key if you don't want a default URL at all.
sitnet.integration.courseUnitInfo.url = {
  default = "http://base.uni.org?courseCode=${course_code}"
  a.uni.org = "http://a.uni.org?courseCode=${course_code}"
  b.uni.org = "http://b.uni.org?courseCode=${course_code}"
}

# Application timezone, used for:
# - formatting timestamps in emails to users
# - setting default timezone for exam rooms, this affects how and when they are eligible for reservations
# - deciding the moment when user should be having an exam, system needs to take possible DST into consideration
# For allowed values see: http://joda-time.sourceforge.net/timezones.html
sitnet.application.timezone = "Europe/Helsinki"

# Exam durations available for choosing, in minutes. The order is the same as the one end user sees on UI.
# First duration is used as default.
sitnet.exam.durations = "45,90,110,180"

# Enable / disable possibility of users to override course grade scale for individual exams associated with the course.
sitnet.course.gradescale.overridable = true

# Enable / disable checking of permission to enroll for exams
sitnet.integration.enrolmentPermissionCheck.active = false
# URL for the API implementing this check. The URL should have the employee number and language either as path
# parameters or query parameters.
# Use ${employee_number} and ${employee_lang} for marking these parts of the path, respectively.
# Language shall be provided to remote API in ISO-861 code form (en, de, fr etc)
# examples: https://x.y.z/enrolmentPermissions?id=${employee_number}&lang=${employee_lang}
#           https://x.y.z/enrolment/${employee_number}/permissions/${employee_lang}
# Response should provide EXAM with the identifiers for the courses that the person is allowed to enroll for.
# Any informational messages addressed to end user should be provided in the language defined by the provided
# language code.
sitnet.integration.enrolmentPermissionCheck.url = "https://uni.org/students/${employee_number}/enrollments?langcode=${employee_lang}"

# Mail address for the system, appears in From-header of emails sent by the app.
sitnet.email.system.account = "no-reply@exam.org"

# Maximum allowed attachment file size in bytes
sitnet.attachment.maxsize = 50000000

# Period after which processed exams (aborted, registered or archived) are marked as deleted and thus hidden from users.
# Value is to be provided in ISO 8601 duration format, default is six months
sitnet.exam.expiration.period = "P6M"

########################################################################################################################
# Internal settings, there should not be any reason to change these unless you really know what you are doing.
# ~~~~~

# Modules
play.http.errorHandler = "system.SystemErrorHandler"
play.http.actionCreator = "system.SystemRequestHandler"
play.http.filters = "system.AppFilters"
play.modules.enabled += "system.App"
play.modules.enabled += "be.objectify.deadbolt.java.DeadboltModule"
play.modules.enabled += "security.DeadboltHook"

# Application languages
# ~~~~~
play.i18n.langs = ["fi", "sv", "en"]

# Max disk buffer size, need to take exam max attachment file size setting into account with this
play.http.parser.maxDiskBuffer = ${sitnet.attachment.maxsize}

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
ebean.default = ["models.*"]

# Security filters
play.filters.headers.contentSecurityPolicy = "default-src 'self'; img-src 'self' data: blob:; font-src 'self' about:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';"
play.filters.csrf.cookie.name = "csrfToken"
play.filters.csrf.cookie.secure = true
play.filters.csrf.token.sign = true


# EXAM version
exam.release.version = "3.2.3"
